#!/bin/bash

tmpdir="/tmp/"
tmpfile="${tmpdir}head_tmp.png"
overlay_img="$HOME/.local/share/icons/xlock/locked.png"

pre_png="${tmpdir}head_"
post_png=".png"
out="${tmpdir}screen.png"

laptop_pos="center"

debug=true

timeit() {
	if $debug; then
		echo -ne "$@:\n"
		{ time { {
			$@
			echo -ne "\t"
			TIMEFORMAT="${stat}Sec: %2E CPU: %2U";
		} 2>&3; } 2>&1; } 3>&2
	else
		$@
	fi
}

get_autorandr_profile() {
	local profile="$(autorandr_profile.sh)"
	config="$(autorandr_manage.sh -c $profile)"

	if [[ $profile =~ (home|alta*) ]]; then
		laptop_pos="right"
	elif [ "$profile" == "office" ]; then
		laptop_pos="left"
	fi
}

hw_info() {
	$debug && echo -e "\tlaptop_pos: $laptop_pos"

	info="$(xdpyinfo -ext all 2>/dev/null | sed '/^  head #/!d;s///')"
	num_screens="$(echo "$info" | wc -l)"

	declare -gA hw_infos=()

	while IFS=' :x@,' read i w h x y; do
		if [ "$laptop_pos" == "left" ]; then
			i=$(((i+1)%2))
		fi
		hw_infos+=([${i}w]=$w [${i}h]=$h [${i}x]=$x [${i}y]=$y)
		$debug && echo -e "\thw_infos+=([${i}w]=$w [${i}h]=$h [${i}x]=$x [${i}y]=$y)"
	done <<< "$info"
}

get_info() {
	echo "${hw_infos[$1$2]}"
}

json_config() {
	if [ $# -eq 1 ]; then
		jq -r '.["'$1'"]' <<< "$config"
	elif [ $# -eq 2 ]; then
		jq -r '.["'$1'"]["'$2'"]' <<< "$config"
	elif [ $3 == "list" ]; then
		jq -r '.["'$1'"]['$2']' <<< "$config"
	fi
}

screenshot() {
	num_screens="$(json_config num_screens)"
	for i in $(seq 0 $((num_screens - 1))); do
		local screen="$(json_config screens $i list)"
		local out="/tmp/head_$i.png"

		local w="$(json_config $screen w)"
		local h="$(json_config $screen h)"
		local x="$(json_config $screen x)"
		local y="$(json_config $screen y)"
		$debug && echo -e "\t$out:\t${w}x${h}+${x}+${y}"

		scrot -o -a ${x},${y},${w},${h} $out
	done
}

blurred() {
	local _png=$pre_png$1$post_png
	gm convert $_png -scale 10% -blur 0x2.5 -resize 1000% $_png
}

pixelize() {
	local _png=$pre_png$1$post_png
	pixelize.py $_png $_png 15
}

overlay() {
	local _file="$pre_png$1$post_png"
	if [[ -f $overlay_img ]]; then
		gm composite -matte -gravity center $overlay_img $_file $_file
	fi
}

combine() {
	width="$(json_config max_w)"
	heigth="$(json_config max_h)"
	min_x="$(json_config min_x)"
	min_y="$(json_config min_y)"
	main="${pre_png}0$post_png"
	extended=""

	for i in $(seq 1 $((num_screens - 1))); do
		local screen="$(json_config screens $i list)"
		if (($(json_config $screen h) > $heigth)); then
			heigth=$(json_config $screen h)
		fi
		extended+="-page +$(json_config $screen x)+$(json_config $screen y) $pre_png$i$post_png "
	done

	$debug && echo -e "\tconvert -page \"${width}x${heigth}+$min_x+$min_y\" $main $extended -flatten $out"
	convert -page "${width}x${heigth}+$min_x+$min_y" $main $extended -flatten $out
}

timeit get_autorandr_profile
# timeit hw_info
timeit screenshot

for i in $(seq 0 $((num_screens - 1))); do
	timeit blurred $i
	timeit pixelize $i
	timeit overlay $i
done

if [ "$num_screens" == 1 ]; then
	mv ${pre_png}0$post_png $out
else
	timeit combine
fi

# i3lock -u -i $out
